#!/usr/bin/env bash

#  http://github.com/thewoolleyman/boxbuilder
#  Copyright (c) 2010 Chad Woolley - The MIT License

set -o noclobber
set -e
set -o pipefail
set -o nounset
set -u
trap 'echo BOXBUILDER - boxbuilder: error on line $LINENO' ERR

setup() {
  if [ -e $HOME/.boxbuilderrc ]; then
    . $HOME/.boxbuilderrc
  fi
  boxbuilder_config=${boxbuilder_config:-'export boxbuilder_config_placeholder_from_boxbuilder=boxbuilder_config_placeholder_from_boxbuilder'}
  boxbuilderrc_url=${boxbuilderrc_url:-"http://github.com/thewoolleyman/boxbuilder/raw/master/boxbuilderrc_download_default"}
  boxbuilder_chef_repos=${boxbuilder_chef_repos:-"git://github.com/thewoolleyman/boxbuilder_example1_chef_repo.git,git://github.com/thewoolleyman/boxbuilder_example2_chef_repo.git"}
  boxbuilder_chef_config_path=${boxbuilder_chef_config_path:-"$HOME/.chef/boxbuilder_example1_chef_repo/config/solo.rb"}
  boxbuilder_chef_json_path=${boxbuilder_chef_json_path:-"$HOME/.chef/boxbuilder_chef_example1_chef_repo/config/node.json"}
  boxbuilder_default_ruby=${boxbuilder_default:-"1.8.7-p174"}
  # TODO: specify exact package versions, and keep README up to date
  boxbuilder_prerequisite_packages=${boxbuilder_prerequisite_packages:-"build-essential zlib1g zlib1g-dev libssl-dev openssl libreadline5-dev bison libxml2-dev git-core autoconf curl"}
}

setup_boxbuilderrc() {
  echo "BOXBUILDER - boxbuilder:  Setting up ~/.boxbuilderrc and ~/.boxbuilderrc_download ..."

  echo "BOXBUILDER - boxbuilder:  Creating ~/.boxbuilderrc to call ~/.boxbuilderrc_download ..."
  if [ -e $HOME/.boxbuilderrc  ]; then
    echo "BOXBUILDER - boxbuilder: $HOME/.boxbuilderrc already exists.  Not overwriting..."
    # TODO: check if line to source $HOME/.boxbuilderrc_download exists, add if it doesn't
  else
    echo "BOXBUILDER - boxbuilder: Creating $HOME/.boxbuilderrc which will source $HOME/.boxbuilderrc_download ..."
    echo "source $HOME/.boxbuilderrc_download" > $HOME/.boxbuilderrc
  fi
    
  echo "BOXBUILDER - boxbuilder:  Downloading AND overwriting ~/.boxbuilderrc_download from $boxbuilderrc_url ..."
  wget -O $HOME/.boxbuilderrc_download $boxbuilderrc_url
  
  echo "BOXBUILDER - boxbuilder:  Finished setting up ~/.boxbuilderrc and ~/.boxbuilderrc_download ..."
}

install_packages() {
  echo "BOXBUILDER - boxbuilder:  Installing packages..."
  _packages_missing=false
  for _package in $boxbuilder_prerequisite_packages
  do
    _package_name=${_package%=*}
    if [[ -z $(echo $_package | grep '=') ]]; then
      _package_version=''
    else
      _package_version=${_package#*=}
    fi
    set +e
    _package_status=$(dpkg -l $_package_name | grep "ii  $_package_name" | grep "$_package_version")
    set -e
    if [[ -z $_package_status ]]; then
      echo "BOXBUILDER - boxbuilder:  Package $_package is NOT already installed..."
      _packages_missing=true
    else
      echo "BOXBUILDER - boxbuilder:  Package $_package is already installed..."
    fi
  done
  if [[ $_packages_missing = true ]]; then
    echo "BOXBUILDER - boxbuilder:  Updating Aptitude..."
    sudo apt-get update
    echo "BOXBUILDER - boxbuilder:  Installing prerequisite packages for RVM/Ruby..."
    for _package in $boxbuilder_prerequisite_packages
    do
      echo "BOXBUILDER - boxbuilder:  Installing package: $_package"
      sudo apt-get install -y $_package
    done
    echo "BOXBUILDER - boxbuilder:  Finished installing packages..."
  else
    echo "BOXBUILDER - boxbuilder:  All packages are already installed, not updating Aptitude or installing packages ..."
  fi
}

install_rvm() {
  echo "BOXBUILDER - boxbuilder:  Installing RVM..."
  if [[ ! -s $HOME/.rvm/scripts/rvm ]] ; then
    curl -O http://rvm.beginrescueend.com/releases/rvm-install-latest
    chmod a+x rvm-install-latest
    ./rvm-install-latest
    echo "BOXBUILDER - boxbuilder:  Finished installing RVM..."
  else
    echo "BOXBUILDER - boxbuilder:  Not installing RVM because it is already installed ..."
  fi
}

enable_rvm() {
  echo "BOXBUILDER - boxbuilder:  Enabling RVM in init file $init_file"
  rvm_init="if [[ -s $HOME/.rvm/scripts/rvm ]] ; then source $HOME/.rvm/scripts/rvm ; fi"
  if [[ -z $(grep '.rvm' $init_file) ]] ; then
    echo $rvm_init >> $init_file
    echo "BOXBUILDER - boxbuilder:  Added RVM line to $init_file"
  else
    echo "BOXBUILDER - boxbuilder:  Not adding RVM line to $init_file because it already exists ..."
  fi
  if [[ ! -z $(grep -e '.*&& return.*$' $init_file) ]] ; then
    # mount proc to avoid error message from sed: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=559539
    # sudo mount -t proc none /proc/  # comment for now, fails if proc already mounted
    sed -i'.bak' -e 's/^.*&& return.*$//' $init_file
    set +u
    source $init_file
    set -u
    echo "BOXBUILDER - boxbuilder:  Removed '&& return' from $init_file"
  else
    echo "BOXBUILDER - boxbuilder:  Not removing '&& return' from $init_file because it was not found ..."
  fi
  echo "BOXBUILDER - boxbuilder:  Finished enabling RVM in init file $init_file"
}

install_rvm_ruby() {
  echo "BOXBUILDER - boxbuilder:  Installing RVM default ruby: $boxbuilder_default_ruby"
  set +u
  set +e
  if [[ -z $($HOME/.rvm/bin/rvm info | head -n 1 | grep $boxbuilder_default_ruby) ]] ; then
    set +u
    set +e
    $HOME/.rvm/bin/rvm install $boxbuilder_default_ruby
    set -u
    set -e
    echo "BOXBUILDER - boxbuilder:  Finished installing RVM default ruby: $boxbuilder_default_ruby"
  else
    echo "BOXBUILDER - boxbuilder:  Not installing RVM Ruby $boxbuilder_default_ruby because it is already installed ..."
  fi
}

set_rvm_default_ruby() {
  echo "BOXBUILDER - boxbuilder:  Setting RVM default ruby: $boxbuilder_default_ruby"
  set +e
  $HOME/.rvm/bin/rvm --default use $boxbuilder_default_ruby
  set -e
  echo "BOXBUILDER - boxbuilder:  Finished setting RVM default ruby: $boxbuilder_default_ruby"
}

setup_rvm() {
  echo "BOXBUILDER - boxbuilder:  Setting up RVM..."
  install_rvm
  for init_file in ~/.bashrc ~/.bash_profile
  do
    if [[ -e $init_file ]] ; then
      set +e  # turn off return code checking for now, failing with output 'tput: unknown terminal "unknown"'
      enable_rvm
      set -e
    fi
  done
  install_rvm_ruby
  set_rvm_default_ruby
  echo "BOXBUILDER - boxbuilder:  Finished setting up RVM..."
}

run() {
  echo "BOXBUILDER - boxbuilder: Starting ..."
  setup
  install_packages
  setup_boxbuilderrc
  setup_rvm
}

run