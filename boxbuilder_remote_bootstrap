#!/usr/bin/env bash

#  http://github.com/thewoolleyman/boxbuilder
#  Copyright (c) 2010 Chad Woolley - The MIT License

boxbuilder_debug=${boxbuilder_debug:-false}

if [[ $boxbuilder_debug = true ]]; then
  export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
  set â€“o verbose
  set -o xtrace
fi

set -o errexit
set -o errtrace
set -o noclobber
set -o nounset
set -o pipefail

_log_prefix="BOXBUILDER - $BASH_SOURCE:"

function onexit() {
  local exit_status=${1:-$?}
  if [[ $exit_status != 0 ]]; then
    _error_line="error trapped."
  else
    _error_line=''
  fi
  if [[ $(type -t onexit_hook) = 'function' ]]; then
    onexit_hook
  fi
  echo "$_log_prefix $_error_line Exiting $0 with $exit_status"
  exit $exit_status
}

trap onexit HUP INT QUIT TERM ERR

exec_remotely() {
  local arg_array i rc
  for arg; do
    arg_array[i++]=$(printf %q "$arg")
  done
  echo "ssh -i $boxbuilder_keypair $boxbuilder_user@$boxbuilder_host \"$@\""
  ssh -i $boxbuilder_keypair $boxbuilder_user@$boxbuilder_host "$@"
}

exec_remotely_quiet() {
  local arg_array i rc
  for arg; do
    arg_array[i++]=$(printf %q "$arg")
  done
  # echo "ssh -i $boxbuilder_keypair $boxbuilder_user@$boxbuilder_host \"$@\""
  ssh -i $boxbuilder_keypair $boxbuilder_user@$boxbuilder_host "$@"
}

exec_remotely_pseudo_tty() {
  local arg_array i rc
  for arg; do
    arg_array[i++]=$(printf %q "$arg")
  done
  echo "ssh -t -i $boxbuilder_keypair $boxbuilder_user@$boxbuilder_host \"$@\""
  ssh -t -i $boxbuilder_keypair $boxbuilder_user@$boxbuilder_host "$@"
}

setup() {
  echo "$_log_prefix  Environment variable setup ..."
  if [ -e $HOME/.boxbuilderrc ]; then
    source $HOME/.boxbuilderrc
  fi
  boxbuilder_config=${boxbuilder_config:-'export boxbuilder_config_placeholder_from_boxbuilder_remote_bootstrap=boxbuilder_config_placeholder_from_boxbuilder_remote_bootstrap'}
  eval $boxbuilder_config
  boxbuilder_keypair=${boxbuilder_keypair:?"Please set 'boxbuilder_keypair' to the path of your ssh private key file"}
  boxbuilder_user=${boxbuilder_user:?"Please set 'boxbuilder_user' to the ssh user on the box being built"}
  boxbuilder_host=${boxbuilder_host:?"Please set 'boxbuilder_host' to the hostname or IP of the box being built"}
  boxbuilder_bootstrap_url=${boxbuilder_bootstrap_url:-"http://github.com/thewoolleyman/boxbuilder/raw/master/boxbuilder_bootstrap"}

  echo "$_log_prefix  Finished environment variable setup:"
  echo "boxbuilder_config=$boxbuilder_config"
  # TODO: Add all env vars which are directly used by this script
}

remote_bootstrap() {
  _boxbuilder_bootstrap_script=/tmp/${boxbuilder_bootstrap_url##*/} # grabs last path component of url to use as script name
  echo "$_log_prefix Downloading $boxbuilder_bootstrap_url to $_boxbuilder_bootstrap_script on $boxbuilder_host ..."
  exec_remotely "wget -O $_boxbuilder_bootstrap_script $boxbuilder_bootstrap_url"
  while exists=$(exec_remotely_quiet "if [[ -e $_boxbuilder_bootstrap_script ]] ; then echo exists; fi"); [[ "$exists" != "exists" ]]; do
    echo "$_log_prefix Waiting for wget to finish downloading $boxbuilder_bootstrap_url to $_boxbuilder_bootstrap_script on $boxbuilder_host ..."
    sleep 3
  done
  echo "$_log_prefix $boxbuilder_bootstrap_url successfully downloaded to $_boxbuilder_bootstrap_script on $boxbuilder_host ..."

  echo "$_log_prefix Changing permissions on $_boxbuilder_bootstrap_script on $boxbuilder_host ..."
  exec_remotely "chmod a+x $_boxbuilder_bootstrap_script"
  echo "$_log_prefix Running $_boxbuilder_bootstrap_script on $boxbuilder_host ..."
  exec_remotely_pseudo_tty "export boxbuilder_config='$boxbuilder_config' \
    && export boxbuilder_debug=$boxbuilder_debug \
    && $_boxbuilder_bootstrap_script"
}

run() {
  echo "$_log_prefix Starting ..."
  setup
  remote_bootstrap
  echo "$_log_prefix Finished and exiting successfully"
}

run
onexit
